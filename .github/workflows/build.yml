name: build

on:
  push:
    branches:
      - '*'
  pull_request:
    branches:
      - '*'

env:
  CACHE_VERSION: 3
  WORKDIR: /home/runner/mod-workdir

jobs:
  toolchain:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          key: toolchain-v${{ env.CACHE_VERSION }}
          path: /home/runner/mod-workdir
      - uses: satackey/action-docker-layer-caching@v0.0.11
        with:
          key: docker-layer-v${{ env.CACHE_VERSION }}
      - name: make toolchain
        run: |
          make toolchain
      - name: pack toolchain
        run: |
          tar -C ~/mod-workdir -czf workdir-toolchain-v${{ env.CACHE_VERSION }}.tar.gz x86_64
      - uses: actions/upload-artifact@v2
        with:
          name: workdir-toolchain-v${{ env.CACHE_VERSION }}
          path: workdir-toolchain-v${{ env.CACHE_VERSION }}.tar.gz

  bootstrap:
    needs: toolchain
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          key: bootstrap-v${{ env.CACHE_VERSION }}
          path: /home/runner/mod-workdir
      - uses: satackey/action-docker-layer-caching@v0.0.11
        with:
          key: docker-layer-v${{ env.CACHE_VERSION }}
      - uses: actions/download-artifact@v2
        with:
          name: workdir-toolchain-v${{ env.CACHE_VERSION }}
          path: /home/runner
      - name: Extract workdir-toolchain-v${{ env.CACHE_VERSION }}
        shell: bash
        run: |
            mkdir -p ~/mod-workdir
            tar -C ~/mod-workdir -x --overwrite -f ~/workdir-toolchain-v${{ env.CACHE_VERSION }}.tar.gz
      - name: make bootstrap
        run: |
          touch toolchain/.stamp_built
          make bootstrap
      - name: pack bootstrap
        run: |
          tar -C ~/mod-workdir -czf workdir-bootstrap.tar.gz x86_64
      - uses: actions/upload-artifact@v2
        with:
          name: workdir-bootstrap
          path: workdir-bootstrap.tar.gz

  #mod-os:
    #needs: bootstrap
    #runs-on: ubuntu-20.04
    #steps:
      #- uses: actions/checkout@v2
      #- uses: actions/cache@v2
        #with:
          #key: mod-os-v${{ env.CACHE_VERSION }}
          #path: /home/runner/mod-workdir
      #- uses: satackey/action-docker-layer-caching@v0.0.11
        #with:
          #key: docker-layer-v${{ env.CACHE_VERSION }}
      #- uses: actions/download-artifact@v2
        #with:
          #name: workdir-bootstrap
          #path: /home/runner
      #- name: Extract workdir-bootstrap
        #shell: bash
        #run: |
            #mkdir -p ~/mod-workdir
            #tar -C ~/mod-workdir -x --overwrite -f ~/workdir-bootstrap.tar.gz
      #- name: make mod-os
        #run: |
          ## touch toolchain/.stamp_built
          ## touch bootstrap/.stamp_built
          ## TODO set NOCLEAN=1 env var if there is cache of this job
          #make mod-os
      #- name: pack mod-os
        #run: |
          #tar -C ~/mod-workdir -czf workdir-mod-os.tar.gz x86_64
      #- uses: actions/upload-artifact@v2
        #with:
          #name: workdir-mod-os
          #path: workdir-mod-os.tar.gz

  plugins-bootstrap:
    needs: toolchain
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - uses: satackey/action-docker-layer-caching@v0.0.11
        with:
          key: docker-layer-v${{ env.CACHE_VERSION }}
      - name: make plugins-bootstrap
        run: |
          touch toolchain/.stamp_built
          make plugins-bootstrap

  ## TODO source root dir?
  #plugins:
    #needs: plugins-bootstrap
    #runs-on: ubuntu-20.04
    #steps:
      #- uses: actions/checkout@v2
        #with:
          #submodules: recursive
      #- uses: actions/cache@v2
        #with:
          #key: plugins-v${{ env.CACHE_VERSION }}
          #path: |
            #plugins/.stamp_built
            #plugins/.stamps
            #plugins/bundles
      #- uses: satackey/action-docker-layer-caching@v0.0.11
        #with:
          #key: docker-layer-v${{ env.CACHE_VERSION }}
      #- name: make plugins
        #run: |
          #touch toolchain/.stamp_built
          #touch plugins/.stamp_built
          #make plugins
      #- name: pack plugin bundles
        #run: |
          #tar -czf plugin-bundles.tar.gz plugins/bundles
      #- uses: actions/upload-artifact@v2
        #with:
          #name: plugin-bundles
          #path: plugin-bundles.tar.gz

  #iso:
    #needs: [mod-os, plugins]
    #runs-on: ubuntu-20.04
    #steps:
      #- uses: actions/checkout@v2
      #- uses: actions/cache@v2
        #with:
          #key: iso-v${{ env.CACHE_VERSION }}
          #path: |
            #archiso/cache
      #- uses: satackey/action-docker-layer-caching@v0.0.11
        #with:
          #key: docker-layer-v${{ env.CACHE_VERSION }}
      #- uses: actions/download-artifact@v2
        #with:
          #name: workdir-mod-os
          #path: /home/runner
      #- uses: actions/download-artifact@v2
        #with:
          #name: plugin-bundles
          #path: /home/runner
      #- name: Extract workdir-mod-os
        #shell: bash
        #run: |
            #mkdir -p ~/mod-workdir
            #tar -C ~/mod-workdir -x --overwrite -f ~/workdir-mod-os.tar.gz
      #- name: Extract plugin bundles
        #shell: bash
        #run: |
            #tar -x --overwrite -f ~/plugin-bundles.tar.gz
      #- name: make iso
        #run: |
          #touch toolchain/.stamp_built
          #touch bootstrap/.stamp_built
          #touch plugins/.stamp_built
          #ln -sf ~/mod-workdir/x86_64/images/rootfs.ext2 mod-os/rootfs.ext2
          #make iso
      #- uses: actions/upload-artifact@v2
        #with:
          #name: iso
          #path: archiso/output/*.iso
